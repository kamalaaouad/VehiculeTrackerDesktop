package application.controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;

import java.net.URL;
import java.util.Date;
import java.util.Hashtable;
import java.util.ResourceBundle;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;

import entities.GPSTracker;
import entities.Vehicule;
import entities.VehiculeGPSTracker;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import service.IGPSTrackerRemote;
import service.IVehiculeGPSTrackerRemote;
import service.IVehiculeRemote;
import javafx.scene.control.TableColumn;

public class TestVTViewController implements Initializable {
	@FXML 
	private TableView<Vehicule> tableVehicules;
	@FXML
	private TableColumn<Vehicule, Long> colIdV;
	@FXML
	private TableColumn<Vehicule, String> colMatV;
	@FXML
	private TableColumn<Vehicule, String> colMarV;
	@FXML
	private TableColumn<Vehicule, String> colTypeV;
	@FXML
	private TableView<GPSTracker> tableTrackers;
	@FXML
	private TableColumn<GPSTracker, Long> colIdT;
	@FXML
	private TableColumn<GPSTracker, String> colSimT;
	@FXML
	private TableColumn<GPSTracker, String> colIMieT;
	@FXML
	private TableView<VehiculeGPSTracker> tableVehiculeTracker;
	@FXML
	private TableColumn<VehiculeGPSTracker, Vehicule> colId_v;
	@FXML
	private TableColumn<VehiculeGPSTracker, GPSTracker> colId_t;
	@FXML
	private TableColumn<VehiculeGPSTracker, Date> colDateD;
	@FXML
	private TableColumn<VehiculeGPSTracker, Date> colDateF;

	private ObservableList<GPSTracker> observableListGps = FXCollections.observableArrayList();
	private ObservableList<Vehicule> observableListVe = FXCollections.observableArrayList();
	private ObservableList<VehiculeGPSTracker> observableListVG = FXCollections.observableArrayList();


	// Event Listener on Button.onAction
	@FXML
	public void onAffect(ActionEvent event) {
		// TODO Autogenerated
		System.out.println("hello");
	}


	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		try {
			//loadDate();
			//loadDateT();
			loadDateV();
			System.out.println("hello"+observableListVe);
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	private void loadDateV() throws NamingException {
	tableVehicules.getItems().clear();
	IVehiculeRemote proxy = lookUpVehiculeRemote();
	for (Vehicule v : proxy.findAll())
		observableListVe.add(v);
	colIdV.setCellValueFactory(new PropertyValueFactory<Vehicule, Long>("id"));
	colMatV.setCellValueFactory(new PropertyValueFactory<Vehicule, String>("matricule"));
	colMarV.setCellValueFactory(new PropertyValueFactory<Vehicule, String>("marque"));
	colTypeV.setCellValueFactory(new PropertyValueFactory<Vehicule, String>("type"));
	tableVehicules.setItems(observableListVe);
}

private void loadDateT() throws NamingException {
	tableTrackers.getItems().clear();
	IGPSTrackerRemote proxy = lookUpGpsRemote();
	for (GPSTracker v : proxy.findAll())
		observableListGps.add(v);
	colIdT.setCellValueFactory(new PropertyValueFactory<GPSTracker, Long>("id"));
	colSimT.setCellValueFactory(new PropertyValueFactory<GPSTracker, String>("simNumber"));
	colIMieT.setCellValueFactory(new PropertyValueFactory<GPSTracker, String>("ime"));
	tableTrackers.setItems(observableListGps);
}

private void loadDate() throws NamingException {
	tableVehiculeTracker.getItems().clear();
	IVehiculeGPSTrackerRemote proxy = lookUpVGTRemote();
	for (VehiculeGPSTracker vg : proxy.findAll())
		observableListVG.add(vg);
	colId_v.setCellValueFactory(new PropertyValueFactory<VehiculeGPSTracker, Vehicule>("vehicule"));
	colId_t.setCellValueFactory(new PropertyValueFactory<VehiculeGPSTracker, GPSTracker>("gpsTracker"));
	colDateD.setCellValueFactory(new PropertyValueFactory<VehiculeGPSTracker, Date>("dateDebut"));
	colDateF.setCellValueFactory(new PropertyValueFactory<VehiculeGPSTracker, Date>("dateFin"));
	tableVehiculeTracker.setItems(observableListVG);
}

public static IGPSTrackerRemote lookUpGpsRemote() throws NamingException {
	Hashtable<Object, Object> jndiProperties = new Hashtable<Object, Object>();
	jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY, "org.wildfly.naming.client.WildFlyInitialContextFactory");
	jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8080");
	final Context context = new InitialContext(jndiProperties);
	String appName = "";
	String moduleName = "vehiculeTrackerEjb";
	String beanName = "SGT";
	String remoteInterface = IGPSTrackerRemote.class.getName();
	String name = "ejb:" + appName + "/" + moduleName + "/" + beanName + "!" + remoteInterface;
	return (IGPSTrackerRemote) context.lookup("ejb:/VehiculeTracker/SGT!service.IGPSTrackerRemote");
}

public static IVehiculeRemote lookUpVehiculeRemote() throws NamingException {
	Hashtable<Object, Object> jndiProperties = new Hashtable<Object, Object>();
	jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY, "org.wildfly.naming.client.WildFlyInitialContextFactory");
	jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8080");
	final Context context = new InitialContext(jndiProperties);
	String appName = "";
	String moduleName = "vehiculeTrackerEjb";
	String beanName = "SV";
	String remoteInterface = IVehiculeRemote.class.getName();
	String name = "ejb:" + appName + "/" + moduleName + "/" + beanName + "!" + remoteInterface;
	return (IVehiculeRemote) context.lookup("ejb:/VehiculeTracker/SV!service.IVehiculeRemote");
}

public static IVehiculeGPSTrackerRemote lookUpVGTRemote() throws NamingException {
	Hashtable<Object, Object> jndiProperties = new Hashtable<Object, Object>();
	jndiProperties.put(Context.INITIAL_CONTEXT_FACTORY, "org.wildfly.naming.client.WildFlyInitialContextFactory");
	jndiProperties.put(Context.PROVIDER_URL, "http-remoting://localhost:8080");
	final Context context = new InitialContext(jndiProperties);
	String appName = "";
	String moduleName = "vehiculeTrackerEjb";
	String beanName = "SVGT";
	String remoteInterface = IVehiculeGPSTrackerRemote.class.getName();
	String name = "ejb:" + appName + "/" + moduleName + "/" + beanName + "!" + remoteInterface;
	return (IVehiculeGPSTrackerRemote) context
			.lookup("ejb:/VehiculeTracker/SVGT!service.IVehiculeGPSTrackerRemote");
}
	
	
}
